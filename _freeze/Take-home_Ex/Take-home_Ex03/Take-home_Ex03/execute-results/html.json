{
  "hash": "d9a8cb8132ca195b3a1cd861a8a6a50c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 3\"\nauthor: \"Arya Siahaan\"\ndate: \"May 15, 2024\"\ndate-modified: \"June 9, 2024\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# VAST Challenge 2024\n\n### Mini-Challenge 2:\n\n#### Background\n\nIn Oceanus, the island's economy thrives on the movement of seafaring vessels, particularly those operated by commercial fishing companies, indicating a healthy economic state. However, a major event has disrupted these routines: SouthSeafood Express Corp was caught engaging in illegal fishing. This scandal caused significant turmoil within the close-knit fishing community. FishEye International, a non-profit dedicated to combating illegal fishing, seeks assistance to understand the impact of this event. They have been gathering and processing data on ship movements and shipping records to create CatchNet: the Oceanus Knowledge Graph. While analysts at FishEye ensure data accuracy, they require assistance to develop analytical capabilities for this data.\n\n#### Tasks and Questions:\n\nFishEye analysts require assistance in performing geographic and temporal analysis of the CatchNet data to prevent future instances of illegal fishing. The task involves developing innovative visual analytics tools and workflows designed to identify and understand signatures of various behaviors. One key objective is to visualize the signature of SouthSeafood Express Corp's illegal activities. Additionally, there is a need to create a workflow capable of detecting other instances of illegal behavior within the data. These efforts are crucial for enhancing FishEye's ability to monitor and combat illegal fishing effectively. This exercise will attempt to address Question 1 and Question 3 of this challenge.\n\n##### Question 1\n\nFishEye analysts have long wanted to better understand the flow of commercially caught fish through Oceanus’s many ports. But as they were loading data into CatchNet, they discovered they had purchased the wrong port records. They wanted to get the ship off-load records, but they instead got the port-exit records (essentially trucks/trains leaving the port area). Port exit records do not include which vessel that delivered the products. Given this limitation, develop a visualization system to associate vessels with their probable cargos. Which vessels deliver which products and when? What are the seasonal trends and anomalies in the port exit records?\n\n##### Question 3\n\nTo support further Fisheye investigations, develop visual analytics workflows that allow you to discover other vessels engaging in behaviors similar to SouthSeafood Express Corp’s illegal activities? Provide visual evidence of the similarities.\n\n## Getting Started\n\n### Loading the required R library packages\n\nThe following code chunk utilises the [`p_load()`](https://www.rdocumentation.org/packages/pacman/versions/0.5.1/topics/p_load) function from the [pacman](https://github.com/trinker/pacman) package to ensure that the necessary packages are available in the R environment. If the packages are already installed on the computer, [`p_load()`](https://www.rdocumentation.org/packages/pacman/versions/0.5.1/topics/p_load) will load them. If they are not installed, it will first install them and then load them into the R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, jsonlite, igraph, \n               tidygraph, ggraph, SmartEDA, skimr,\n               lubridate, ggplot2, DataExplorer) \n```\n:::\n\n\n### Loading The Data\n\nThe dataset is in the form of a json file and it is available for download at the [Vast Challenge 2024](https://vast-challenge.github.io/2024/index.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_data <- fromJSON(\"data/mc2.json\")\n```\n:::\n\n\nThis line loads the JSON dataset into R using the jsonlite package. The dataset is stored in the mc2_data variable.\n\n## Data Preparation\n\n### Wrangling and tidying edges\n\n#### Extracting edges\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Wrangling and tidying edges\nmc2_edges <- as_tibble(mc2_data$links) %>% distinct()\n# Converts the date columns to POSIXct datetime format using the as_datetime function from the lubridate package, then display it with  glimpse() to confirm if the process have been performed correctly.\nmc2_edges <- mc2_edges %>%\n  mutate(date = as_datetime(date), time = as_datetime(time))\nglimpse(mc2_edges)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 271,643\nColumns: 17\n$ type                <chr> \"Event.TransportEvent.TransponderPing\", \"Event.Tra…\n$ time                <dttm> 2035-09-16 04:06:48, 2035-09-20 05:21:33, 2035-09…\n$ dwell               <dbl> 115074.79, 412706.32, 286092.88, 327623.95, 243225…\n$ `_last_edited_by`   <chr> \"Olokun Daramola\", \"Melinda Manning\", \"Olokun Dara…\n$ `_date_added`       <chr> \"2035-09-16T00:59:46.300100\", \"2035-09-22T02:37:37…\n$ `_last_edited_date` <chr> \"2035-09-16T00:59:46.300100\", \"2035-09-22T02:37:37…\n$ `_raw_source`       <chr> \"Oceanus Vessel Locator System\", \"Oceanus Vessel L…\n$ `_algorithm`        <chr> \"OVLS-Catch&Hook\", \"OVLS-Catch&Hook\", \"OVLS-Catch&…\n$ source              <chr> \"City of Haacklee\", \"City of Haacklee\", \"City of H…\n$ target              <chr> \"perchplundererbc0\", \"perchplundererbc0\", \"perchpl…\n$ key                 <int> 0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 1, 2, 3, 4, 5, 6, 7,…\n$ date                <dttm> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ data_author         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ aphorism            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ holiday_greeting    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ wisdom              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `saying of the sea` <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n\n\n:::\n:::\n\n\nThe code above converts the 'links' part of the dataset into a tibble and removes duplicates. It then converts date and time information into proper datetime formats using lubridate, and extracts just the date to a new column.\n\n#### Splitting and Tidying the 'type' Column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nword_list <- strsplit(mc2_edges$type, \"\\\\.\")\nmax_elements <- max(lengths(word_list)) #to find the maximum number of elements in any split\nword_list_padded <- lapply(word_list, \nfunction(x) c(x, rep(NA, max_elements - length(x)))) #to pad shorter splits with NA values to make them all the same length.\nword_df <- do.call(rbind, word_list_padded)\ncolnames(word_df) <- paste0(\"event\", 1:max_elements)\n\n# Since the output above is a matrix, the code chunk below is used to convert word_df into a tibble data.frame.\nword_df <- as_tibble(word_df) %>%\n  select(event2, event3)\n\n\n# The code chunk below appends the extracted columns back to mc2_edges tibble data.frame\nmc2_edges <- mc2_edges %>%\n  cbind(word_df)\n```\n:::\n\n\nThis code splits the 'type' column into multiple components, pads shorter entries with NAs, and integrates them back into the mc2_edges dataframe as new columns.\n\nAfter cleaning and preparing mc2_edges dataframe, I want to understand how the newly formed structure looks like, lets use the DataExplorer package to visualize it.\n\n::: panel-tabset\n## The plot\n\n![](images/clipboard-2055116904.png)\n\n![](images/clipboard-1180112888.png)\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot introduction of the data\nplot_intro(mc2_edges, title = \"Introduction of mc2_edges Data\")\n```\n:::\n\n:::\n\n::: panel-tabset\n## The plot\n\n![](images/clipboard-2619173514.png)\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate and display the data structure plot\nplot_str(mc2_edges)\n```\n:::\n\n:::\n\n::: panel-tabset\n## The plot\n\n![](images/clipboard-299140884.png)\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot missing values\nplot_missing(mc2_edges, title = \"Missing Values in mc2_edges Data\")\n```\n:::\n\n:::\n\nAfter the above EDA, I will remove columns that is unnecessary to answer the task at hand\n\n#### Dropping Unnecessary Columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_edges_cleaned <- mc2_edges %>%\n  select(-c(`type`, `_last_edited_by`, `_date_added`, `_last_edited_date`, `_raw_source`, `_algorithm`, `key`,  `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`))\n\nglimpse(mc2_edges_cleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 271,643\nColumns: 7\n$ time   <dttm> 2035-09-16 04:06:48, 2035-09-20 05:21:33, 2035-09-28 04:31:47,…\n$ dwell  <dbl> 115074.79, 412706.32, 286092.88, 327623.95, 243225.35, 109564.2…\n$ source <chr> \"City of Haacklee\", \"City of Haacklee\", \"City of Haacklee\", \"Ci…\n$ target <chr> \"perchplundererbc0\", \"perchplundererbc0\", \"perchplundererbc0\", …\n$ date   <dttm> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ event2 <chr> \"TransportEvent\", \"TransportEvent\", \"TransportEvent\", \"Transpor…\n$ event3 <chr> \"TransponderPing\", \"TransponderPing\", \"TransponderPing\", \"Trans…\n```\n\n\n:::\n:::\n\n\nRemoves unnecessary columns from the dataset that are not needed for analysis, cleaning up the data. Glimpse() is then used to display the structure of the data.\n\n### Wrangling and tidying nodes\n\n#### Extracting Nodes and Removing Duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes <- as_tibble(mc2_data$nodes) %>%\n  distinct()\n\nglimpse(mc2_nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 5,637\nColumns: 20\n$ type                 <chr> \"Entity.Commodity.Fish\", \"Entity.Commodity.Fish\",…\n$ `_last_edited_by`    <chr> \"Clepper Jessen\", \"Clepper Jessen\", \"Haenyeo Hyun…\n$ `_date_added`        <chr> \"2033-09-04T00:00:00\", \"2034-01-21T00:00:00\", \"20…\n$ `_last_edited_date`  <chr> \"2035-01-25T00:00:00\", \"2035-01-04T00:00:00\", \"20…\n$ `_raw_source`        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"Oceanus:…\n$ `_algorithm`         <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ name                 <chr> \"Cod/Gadus n.specificatae\", \"Birdseye/Pisces frig…\n$ id                   <chr> \"gadusnspecificatae4ba\", \"piscesfrigus900\", \"pisc…\n$ Name                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Haacklee…\n$ Description          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Activities           <list> <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, …\n$ kind                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"city\", \"…\n$ qty_tons             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ date                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ flag_country         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ company              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tonnage              <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ length_overall       <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ style                <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ fish_species_present <list> <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, …\n```\n\n\n:::\n:::\n\n\nThis converts the nodes data to a tibble and removes duplicate rows, then displays the structure of the data using glimpse().\n\nI plan to make use of the date column, but since it is in character format, I will convert it first into date format using lubridate package and glimpse it again to verify the changes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes <- mc2_nodes %>% \n  mutate(date = as_date(date)) \n\nglimpse(mc2_nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 5,637\nColumns: 20\n$ type                 <chr> \"Entity.Commodity.Fish\", \"Entity.Commodity.Fish\",…\n$ `_last_edited_by`    <chr> \"Clepper Jessen\", \"Clepper Jessen\", \"Haenyeo Hyun…\n$ `_date_added`        <chr> \"2033-09-04T00:00:00\", \"2034-01-21T00:00:00\", \"20…\n$ `_last_edited_date`  <chr> \"2035-01-25T00:00:00\", \"2035-01-04T00:00:00\", \"20…\n$ `_raw_source`        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"Oceanus:…\n$ `_algorithm`         <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ name                 <chr> \"Cod/Gadus n.specificatae\", \"Birdseye/Pisces frig…\n$ id                   <chr> \"gadusnspecificatae4ba\", \"piscesfrigus900\", \"pisc…\n$ Name                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Haacklee…\n$ Description          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Activities           <list> <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, …\n$ kind                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"city\", \"…\n$ qty_tons             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ date                 <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ flag_country         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ company              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tonnage              <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ length_overall       <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ style                <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ fish_species_present <list> <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, …\n```\n\n\n:::\n:::\n\n\nThere are two more additional data issues can be observed. They are:\n\nThe values in Activities and fish_species_present fields are in list data type, which will affect the ability to process and to analyse the data. As shown in the screenshot below, some values in the Activities field are not ready to be analyse without further tidying (i.e. removing c(““)).\n\nTidying text field In the code chunk below, mutate() of dplyr and gsub() of Base R are used to perform the data tidying task.\n\nThis cleans up the Activities and fish_species_present columns by removing unnecessary characters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes <- mc2_nodes %>%\n  mutate(Activities = gsub(\"c[(]\", \"\", Activities)) %>% \n  mutate(Activities = gsub(\"\\\"\", \"\", Activities)) %>%\n  mutate(Activities = gsub(\"[)]\", \"\", Activities)) \n\nmc2_nodes <- mc2_nodes %>%\n  mutate(fish_species_present = gsub(\"c[(]\", \"\", fish_species_present)) %>% \n  mutate(fish_species_present = gsub(\"\\\"\", \"\", fish_species_present)) %>%\n  mutate(fish_species_present = gsub(\"[)]\", \"\", fish_species_present)) \n```\n:::\n\n\nNow, lets use DataExplorer package again to visualize it\n\n::: panel-tabset\n## The plot\n\n![](images/clipboard-4088556349.png)\n\n![](images/clipboard-290209426.png)\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot introduction of the data\nplot_intro(mc2_nodes, title = \"Introduction of mc2_nodes Data\")\n```\n:::\n\n:::\n\n::: panel-tabset\n## The plot\n\n![](images/clipboard-1740825281.png)\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate and display the data structure plot\nplot_str(mc2_nodes)\n```\n:::\n\n:::\n\n::: panel-tabset\n## The plot\n\n![](images/clipboard-1008176763.png)\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot missing values\nplot_missing(mc2_nodes, title = \"Missing Values in mc2_nodes Data\")\n```\n:::\n\n:::\n\n#### Dropping unnecessary Columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes_cleaned <- mc2_nodes %>%\n  select(-c(`_last_edited_by`, `_date_added`, `_last_edited_date`, `_raw_source`, `_algorithm`, `style`))\nglimpse(mc2_nodes_cleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 5,637\nColumns: 14\n$ type                 <chr> \"Entity.Commodity.Fish\", \"Entity.Commodity.Fish\",…\n$ name                 <chr> \"Cod/Gadus n.specificatae\", \"Birdseye/Pisces frig…\n$ id                   <chr> \"gadusnspecificatae4ba\", \"piscesfrigus900\", \"pisc…\n$ Name                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Haacklee…\n$ Description          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Activities           <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"…\n$ kind                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"city\", \"…\n$ qty_tons             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ date                 <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ flag_country         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ company              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tonnage              <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ length_overall       <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ fish_species_present <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"…\n```\n\n\n:::\n:::\n\n\nRemoves additional unneeded columns from the nodes data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Inspect the edges dataframe\nglimpse(mc2_edges_cleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 271,643\nColumns: 7\n$ time   <dttm> 2035-09-16 04:06:48, 2035-09-20 05:21:33, 2035-09-28 04:31:47,…\n$ dwell  <dbl> 115074.79, 412706.32, 286092.88, 327623.95, 243225.35, 109564.2…\n$ source <chr> \"City of Haacklee\", \"City of Haacklee\", \"City of Haacklee\", \"Ci…\n$ target <chr> \"perchplundererbc0\", \"perchplundererbc0\", \"perchplundererbc0\", …\n$ date   <dttm> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ event2 <chr> \"TransportEvent\", \"TransportEvent\", \"TransportEvent\", \"Transpor…\n$ event3 <chr> \"TransponderPing\", \"TransponderPing\", \"TransponderPing\", \"Trans…\n```\n\n\n:::\n\n```{.r .cell-code}\n# Inspect the nodes dataframe\nglimpse(mc2_nodes_cleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 5,637\nColumns: 14\n$ type                 <chr> \"Entity.Commodity.Fish\", \"Entity.Commodity.Fish\",…\n$ name                 <chr> \"Cod/Gadus n.specificatae\", \"Birdseye/Pisces frig…\n$ id                   <chr> \"gadusnspecificatae4ba\", \"piscesfrigus900\", \"pisc…\n$ Name                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Haacklee…\n$ Description          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Activities           <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"…\n$ kind                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"city\", \"…\n$ qty_tons             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ date                 <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ flag_country         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ company              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tonnage              <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ length_overall       <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ fish_species_present <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"…\n```\n\n\n:::\n:::\n\n\nLet's investigate further on what is in the `type` column from mc2_nodes_cleaned dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(mc2_nodes_cleaned$type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Entity.Commodity.Fish\"          \"Entity.Location.City\"          \n [3] \"Entity.Document.DeliveryReport\" \"Entity.Vessel.FishingVessel\"   \n [5] \"Entity.Vessel.Other\"            \"Entity.Vessel.Ferry.Passenger\" \n [7] \"Entity.Vessel.CargoVessel\"      \"Entity.Vessel.Ferry.Cargo\"     \n [9] \"Entity.Vessel.Research\"         \"Entity.Vessel.Tour\"            \n[11] \"Entity.Location.Point\"          \"Entity.Location.Region\"        \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvessel_type_counts <- mc2_nodes_cleaned %>%\n  group_by(type) %>%\n  summarise(count = n())\n\n# Display the result\nprint(vessel_type_counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 2\n   type                           count\n   <chr>                          <int>\n 1 Entity.Commodity.Fish             10\n 2 Entity.Document.DeliveryReport  5307\n 3 Entity.Location.City               6\n 4 Entity.Location.Point             12\n 5 Entity.Location.Region             6\n 6 Entity.Vessel.CargoVessel        100\n 7 Entity.Vessel.Ferry.Cargo          2\n 8 Entity.Vessel.Ferry.Passenger      3\n 9 Entity.Vessel.FishingVessel      178\n10 Entity.Vessel.Other                5\n11 Entity.Vessel.Research             2\n12 Entity.Vessel.Tour                 6\n```\n\n\n:::\n:::\n\n\nThis particular column contains variety of different data, some of them seems interesting and useful for analysis, they are:\n\n-   Entity.Commodity.Fish\n\n-   Entity.Document.DeliveryReport\n\n-   Entity.Location.City\n\n-   Entity.Location.Point\n\n-   Entity.Location.Region\n\n-   Entity.Vessel.CargoVessel\n\n-   Entity.Vessel.FishingVessel\n\nThe others seems unnecessary.\n\nI will try to make separate dataframe for each of them.\n\nHere I can see the type of vessel and how many of each are recorded in the dataframe.\n\nI'm only interested in the fishing vessel and the cargo vessel, and apparently there 178 fishing vessels and 100 cargo vessels, next so I will try to filter all the rows that only contain fishing vessels and cargo vessels\n\nFilter all the rows containing fishing_vessel\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter fishing vessels and rename specific columns while keeping all others\nfishing_vessel <- mc2_nodes_cleaned %>%\n  filter(type %in% c(\"Entity.Vessel.FishingVessel\")) %>%\n  rename(\n    vessel_type = type,\n    fishing_vessel_id = id,\n    fishing_vessel_name = Name\n  )\n```\n:::\n\n\nNow I want to find out all the companies that own these fishing vessels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(fishing_vessel$company)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Roth, Logan and Moreno\"                   \n [2] \"Brown-Haas\"                               \n [3] \"Smith, Davis and Acosta\"                  \n [4] \"Cisneros-Meyer\"                           \n [5] \"FlounderLeska Marine BV\"                  \n [6] \"House Group\"                              \n [7] \"Weaver-Baker\"                             \n [8] \"Stewart, Perkins and Sanchez\"             \n [9] \"ScaniaSeafood Holdings Ltd. Liability Co\" \n[10] \"Mccormick Group\"                          \n[11] \"Parks Ltd\"                                \n[12] \"Taylor-Sawyer\"                            \n[13] \"Nielsen, Valentine and Bell\"              \n[14] \"Jacobson Inc\"                             \n[15] \"Ballard-Bailey\"                           \n[16] \"Steele PLC\"                               \n[17] \"WestRiver Shipping KgaA\"                  \n[18] \"Robinson, Mcmillan and Watson\"            \n[19] \"Lowery-Myers\"                             \n[20] \"Dyer-Campbell\"                            \n[21] \"Adkins LLC\"                               \n[22] \"BaringoAmerica Marine Ges.m.b.H.\"         \n[23] \"Terry, Smith and Lyons\"                   \n[24] \"Schmidt Ltd\"                              \n[25] \"Ritter Ltd\"                               \n[26] \"Decker PLC\"                               \n[27] \"Faulkner, Shaffer and Moyer\"              \n[28] \"Brown-Allen\"                              \n[29] \"Bell, Reynolds and Forbes\"                \n[30] \"French Ltd\"                               \n[31] \"Rivera Group\"                             \n[32] \"Bowers Group\"                             \n[33] \"MonarchCreek Shipping S.p.A.\"             \n[34] \"Mendez-Tyler\"                             \n[35] \"Mooney, Stevenson and Miller\"             \n[36] \"Garcia-Wallace\"                           \n[37] \"Cox-Mason\"                                \n[38] \"Garcia-Sanchez\"                           \n[39] \"Sutton PLC\"                               \n[40] \"Rasmussen, Nelson and King\"               \n[41] \"Brown, Clarke and Martinez\"               \n[42] \"Gomez-Mccormick\"                          \n[43] \"Solis-Lopez\"                              \n[44] \"SouthSeafood Express Corp\"                \n[45] \"Clark, Hall and Cole\"                     \n[46] \"Cox-Donovan\"                              \n[47] \"Solis PLC\"                                \n[48] \"Newton-Meyer\"                             \n[49] \"Mcpherson-Wright\"                         \n[50] \"Cordova, Ritter and Flores\"               \n[51] \"Miller, Smith and Reed\"                   \n[52] \"Barnes and Sons\"                          \n[53] \"Bennett, Jones and Miller\"                \n[54] \"Mercado, French and Graham\"               \n[55] \"Brewer-Massey\"                            \n[56] \"Norman LLC\"                               \n[57] \"Wiley LLC\"                                \n[58] \"Davis, Harris and West\"                   \n[59] \"Goodman LLC\"                              \n[60] \"Reid, Thomas and Gill\"                    \n[61] \"Henry-Alvarez\"                            \n[62] \"Lane Group\"                               \n[63] \"Smith, Collins and Johnson\"               \n[64] \"Franco, Olson and Long\"                   \n[65] \"Dry CreekWorldLogistics Ltd. Liability Co\"\n[66] \"Rodriguez, Henry and Woodard\"             \n[67] \"Thompson-Padilla\"                         \n[68] \"Carter, Mcdonald and Miller\"              \n[69] \"Williams, Horn and Morales\"               \n[70] \"Callahan-Green\"                           \n[71] \"Green, Vincent and Thompson\"              \n[72] \"Lake Malawi  Corp United\"                 \n[73] \"Wolf and Sons\"                            \n[74] \"Hernandez Group\"                          \n[75] \"Horne Group\"                              \n[76] \"Fischer, Graham and Robinson\"             \n[77] \"Chavez and Sons\"                          \n[78] \"Maacama Ocean Worldwide LLC\"              \n[79] \"Jordan and Sons\"                          \n[80] \"Martin-Case\"                              \n[81] \"Murphy and Sons\"                          \n[82] \"Collins, Johnson and Lloyd\"               \n[83] \"Sparmans Marine Carriers Oyj\"             \n[84] \"Mullins-Carrillo\"                         \n[85] \"Riley Inc\"                                \n[86] \"NortheastSeafood Carriers Ltd\"            \n[87] \"Chambers, Hall and Walker\"                \n[88] \"Osborne and Sons\"                         \n[89] \"Conley, Benton and Miller\"                \n[90] \"Saltwater Sisters Company Marine\"         \n[91] \"Costa de Oro Enterprises\"                 \n[92] \"Bailey-Mccullough\"                        \n[93] \"Chase, Long and Anderson\"                 \n[94] \"Vasquez-Gonzalez\"                         \n[95] \"Harper and Sons\"                          \n[96] \"Tainamarine Fishing Co\"                   \n[97] \"Mcdonald-Jones\"                           \n[98] \"George-Brown\"                             \n[99] \"SamakaDredgeTransport OJSC\"               \n```\n\n\n:::\n:::\n\n\nFrom the result above I see \"SouthSeafood Express Corp\" is listed, now I want to isolate all the fishing vessels belong to \"SouthSeafood Express Corp\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter fishing vessels owned by \"SouthSeafood Express Corp\"\nsouthseafood_fishing_vessels <- fishing_vessel %>%\n  filter(company == \"SouthSeafood Express Corp\")\nprint(southseafood_fishing_vessels)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 14\n  vessel_type name  fishing_vessel_id fishing_vessel_name Description Activities\n  <chr>       <chr> <chr>             <chr>               <chr>       <chr>     \n1 Entity.Ves… <NA>  snappersnatcher7… Snapper Snatcher    <NA>        NULL      \n2 Entity.Ves… <NA>  roachrobberdb6    Roach Robber        <NA>        NULL      \n# ℹ 8 more variables: kind <chr>, qty_tons <dbl>, date <date>,\n#   flag_country <chr>, company <chr>, tonnage <int>, length_overall <int>,\n#   fish_species_present <chr>\n```\n\n\n:::\n:::\n\n\nSo the vessels belong to \"SouthSeafood Express Corp\" are\n\n-   Snapper Snatcher (snappersnatcher7be)\n\n-   Roach Robber (roachrobberdb6)\n\nAfter identifying the name of the fishing vessels belong to \"SouthSeafood Express Corp\", I need to check whether this information is also contained in the mc2_edges_cleaned dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check if specific values are in the source column\nvalues_exist <- c(\"snappersnatcher7be\", \"roachrobberdb6\") %in% mc2_edges_cleaned$source\n\n# Print results\nprint(values_exist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE TRUE\n```\n\n\n:::\n:::\n\n\nThe output \\[1\\] TRUE TRUE indicates that both identifiers \"snappersnatcher7be\" and \"roachrobberdb6\" are present in the source column of mc2_edges_cleaned dataframe.\n\nThe next steps will involve deeper analysis and visualization to understand the activities and patterns associated with these vessels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract relevant data for the specified vessels\nsouthseafood_activities <- mc2_edges_cleaned %>%\n  filter(source %in% c(\"snappersnatcher7be\", \"roachrobberdb6\")) \n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter cargo vessels and select specific columns with renaming\ncargo_vessel <- mc2_nodes_cleaned %>%\n  filter(type %in% c(\"Entity.Vessel.CargoVessel\")) %>%\n  select(\n    vessel_type = type,\n    cargo_vessel_id = id,\n    cargo_vessel_name = Name,\n    company\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(fishing_vessel$company)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Roth, Logan and Moreno\"                   \n [2] \"Brown-Haas\"                               \n [3] \"Smith, Davis and Acosta\"                  \n [4] \"Cisneros-Meyer\"                           \n [5] \"FlounderLeska Marine BV\"                  \n [6] \"House Group\"                              \n [7] \"Weaver-Baker\"                             \n [8] \"Stewart, Perkins and Sanchez\"             \n [9] \"ScaniaSeafood Holdings Ltd. Liability Co\" \n[10] \"Mccormick Group\"                          \n[11] \"Parks Ltd\"                                \n[12] \"Taylor-Sawyer\"                            \n[13] \"Nielsen, Valentine and Bell\"              \n[14] \"Jacobson Inc\"                             \n[15] \"Ballard-Bailey\"                           \n[16] \"Steele PLC\"                               \n[17] \"WestRiver Shipping KgaA\"                  \n[18] \"Robinson, Mcmillan and Watson\"            \n[19] \"Lowery-Myers\"                             \n[20] \"Dyer-Campbell\"                            \n[21] \"Adkins LLC\"                               \n[22] \"BaringoAmerica Marine Ges.m.b.H.\"         \n[23] \"Terry, Smith and Lyons\"                   \n[24] \"Schmidt Ltd\"                              \n[25] \"Ritter Ltd\"                               \n[26] \"Decker PLC\"                               \n[27] \"Faulkner, Shaffer and Moyer\"              \n[28] \"Brown-Allen\"                              \n[29] \"Bell, Reynolds and Forbes\"                \n[30] \"French Ltd\"                               \n[31] \"Rivera Group\"                             \n[32] \"Bowers Group\"                             \n[33] \"MonarchCreek Shipping S.p.A.\"             \n[34] \"Mendez-Tyler\"                             \n[35] \"Mooney, Stevenson and Miller\"             \n[36] \"Garcia-Wallace\"                           \n[37] \"Cox-Mason\"                                \n[38] \"Garcia-Sanchez\"                           \n[39] \"Sutton PLC\"                               \n[40] \"Rasmussen, Nelson and King\"               \n[41] \"Brown, Clarke and Martinez\"               \n[42] \"Gomez-Mccormick\"                          \n[43] \"Solis-Lopez\"                              \n[44] \"SouthSeafood Express Corp\"                \n[45] \"Clark, Hall and Cole\"                     \n[46] \"Cox-Donovan\"                              \n[47] \"Solis PLC\"                                \n[48] \"Newton-Meyer\"                             \n[49] \"Mcpherson-Wright\"                         \n[50] \"Cordova, Ritter and Flores\"               \n[51] \"Miller, Smith and Reed\"                   \n[52] \"Barnes and Sons\"                          \n[53] \"Bennett, Jones and Miller\"                \n[54] \"Mercado, French and Graham\"               \n[55] \"Brewer-Massey\"                            \n[56] \"Norman LLC\"                               \n[57] \"Wiley LLC\"                                \n[58] \"Davis, Harris and West\"                   \n[59] \"Goodman LLC\"                              \n[60] \"Reid, Thomas and Gill\"                    \n[61] \"Henry-Alvarez\"                            \n[62] \"Lane Group\"                               \n[63] \"Smith, Collins and Johnson\"               \n[64] \"Franco, Olson and Long\"                   \n[65] \"Dry CreekWorldLogistics Ltd. Liability Co\"\n[66] \"Rodriguez, Henry and Woodard\"             \n[67] \"Thompson-Padilla\"                         \n[68] \"Carter, Mcdonald and Miller\"              \n[69] \"Williams, Horn and Morales\"               \n[70] \"Callahan-Green\"                           \n[71] \"Green, Vincent and Thompson\"              \n[72] \"Lake Malawi  Corp United\"                 \n[73] \"Wolf and Sons\"                            \n[74] \"Hernandez Group\"                          \n[75] \"Horne Group\"                              \n[76] \"Fischer, Graham and Robinson\"             \n[77] \"Chavez and Sons\"                          \n[78] \"Maacama Ocean Worldwide LLC\"              \n[79] \"Jordan and Sons\"                          \n[80] \"Martin-Case\"                              \n[81] \"Murphy and Sons\"                          \n[82] \"Collins, Johnson and Lloyd\"               \n[83] \"Sparmans Marine Carriers Oyj\"             \n[84] \"Mullins-Carrillo\"                         \n[85] \"Riley Inc\"                                \n[86] \"NortheastSeafood Carriers Ltd\"            \n[87] \"Chambers, Hall and Walker\"                \n[88] \"Osborne and Sons\"                         \n[89] \"Conley, Benton and Miller\"                \n[90] \"Saltwater Sisters Company Marine\"         \n[91] \"Costa de Oro Enterprises\"                 \n[92] \"Bailey-Mccullough\"                        \n[93] \"Chase, Long and Anderson\"                 \n[94] \"Vasquez-Gonzalez\"                         \n[95] \"Harper and Sons\"                          \n[96] \"Tainamarine Fishing Co\"                   \n[97] \"Mcdonald-Jones\"                           \n[98] \"George-Brown\"                             \n[99] \"SamakaDredgeTransport OJSC\"               \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n### Further Data Subsetting and Renaming\n\n#### Creating Subset Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransponderping <- subset(mc2_edges_cleaned, event3 == \"TransponderPing\")\n```\n:::\n\n\nCreates subsets of data for different types of events: transponder pings, transactions, and harbor reports, facilitating focused analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransponderping <- subset(mc2_edges_cleaned, event3 == \"TransponderPing\")\ntransaction <- subset(mc2_edges_cleaned, event2 == \"Transaction\")\nharbor_report <- subset(mc2_edges_cleaned,  event2 == \"HarborReport\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes_type_counts <- mc2_nodes %>%\n  group_by(type) %>%\n  summarise(count = n())\n\n# Display the result\nprint(mc2_nodes_type_counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 2\n   type                           count\n   <chr>                          <int>\n 1 Entity.Commodity.Fish             10\n 2 Entity.Document.DeliveryReport  5307\n 3 Entity.Location.City               6\n 4 Entity.Location.Point             12\n 5 Entity.Location.Region             6\n 6 Entity.Vessel.CargoVessel        100\n 7 Entity.Vessel.Ferry.Cargo          2\n 8 Entity.Vessel.Ferry.Passenger      3\n 9 Entity.Vessel.FishingVessel      178\n10 Entity.Vessel.Other                5\n11 Entity.Vessel.Research             2\n12 Entity.Vessel.Tour                 6\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes_name_counts <- mc2_nodes %>%\n  group_by(name) %>%\n  summarise(count = n())\n\n# Display the result\nprint(mc2_nodes_name_counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 × 2\n   name                      count\n   <chr>                     <int>\n 1 Beauvoir/Habeas pisces        1\n 2 Birdseye/Pisces frigus        1\n 3 Cod/Gadus n.specificatae      1\n 4 Harland/Piscis sapidum        1\n 5 Helenaa/Pisces satis          1\n 6 Offidiaa/Piscis osseus        1\n 7 Salmon/Oncorhynchus rosea     1\n 8 Sockfish/Pisces foetida       1\n 9 Tuna/Thunnini n.vera          1\n10 Wrasse/Labridae n.refert      1\n11 <NA>                       5627\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}